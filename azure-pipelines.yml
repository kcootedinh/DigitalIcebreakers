# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

resources:
- repo: self

variables:
   # Update Azure.ResourceGroupName value with Azure resource group name.
  Azure.ResourceGroupName: 'digital-icebreakers'

  # Update Azure.ServiceConnectionId value with AzureRm service endpoint.
  Azure.ServiceConnectionId: 'digital-icebreakers-service-connection'

  # Update Azure.Location value with Azure Location.
  Azure.Location: 'australiaeast'

  # Update ACR.Name value with ACR name. Please note ACR names should be all lower-case and alphanumeric only.
  ACR.Name: 'stafford'

  ACR.ImageName: '$(ACR.Name):$(Build.BuildId)'
  ACR.FullName: '$(ACR.Name).azurecr.io'
  Azure.CreateResources: 'true' # Update Azure.CreateResources to false if you have already created resources like resource group and azure container registry.
  System.Debug: 'false'

jobs:
- job: BuildImage
  displayName: Build
#  dependsOn: CreateResources
#  condition: or(succeeded(), ne(variables['Azure.CreateResources'], 'true'))

  pool:
    vmImage: 'ubuntu-16.04'

  steps:
  # - task: Docker@1
  #   displayName: Container registry login
  #   inputs:
  #     command: login
  #     azureSubscriptionEndpoint: '$(Azure.ServiceConnectionId)'
  #     azureContainerRegistry: $(ACR.FullName)'
  # - task: Docker@1
  #   displayName: 'Build an image'
  #   inputs:
  #     azureSubscriptionEndpoint: '$(Azure.ServiceConnectionId)'
  #     azureContainerRegistry: '$(ACR.FullName)'
  #     imageName: '$(ACR.ImageName)'
  #     command: build
  #     dockerFile: '**/Dockerfile'
  # - task: Docker@1
  #   displayName: 'Push an image'
  #   inputs:
  #     azureSubscriptionEndpoint: '$(Azure.ServiceConnectionId)'
  #     azureContainerRegistry: '$(ACR.FullName)'
  #     imageName: '$(ACR.ImageName)'
  #     command: push
  - bash: echo '$(Azure.ServiceConnectionId)'
  - bash: echo '$(ACR.FullName)'
  - task: Docker@1
    displayName: 'Push an image'
    inputs:
      azureSubscriptionEndpoint: '$(Azure.ServiceConnectionId)'
      azureContainerRegistry: '$(ACR.FullName)'
      imageName: 'hello-world'
      command: push