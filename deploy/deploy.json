{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "githubPat": {
        "type": "securestring"
      },
      "vmScriptPath": {
        "type": "string",
        "defaultValue": "https://api.github.com/repos/staff0rd/digitalicebreakers/contents/deploy/deploy.sh"
      },
      "adminUsername": {
        "type": "string",
        "defaultValue": "stafford",
        "metadata": {
          "description": "User name for the Virtual Machine."
        }
      },
      "authenticationType": {
        "type": "string",
        "defaultValue": "sshPublicKey",
        "allowedValues": [
          "sshPublicKey",
          "password"
        ],
        "metadata": {
          "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
        }
      },
      "adminPasswordOrKey": {
        "type": "securestring",
        "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCzX2qnhiN6cO/uDswlceibcwBzUFUIXftykpw151+hCJW+u/grKYa2BdhDkwQxmrtimAtWbQXzWbuzfIPt8I75sDcUhOVmCZeGHVvqJTv5I/3YISGtCosY9g68vZD6cqzlQ5ajZjk25+ECn33863SrDfIXpEUXlk7WUslrCoRECTX2SRJeFd5wPm2ACyXwxE9cyB9pMk84LhbjGqx25yyhx4zg0bEF+FdlJ3VC+ckHSBgWhkkb6W09a1s7buwrh/kzGTRuzUi3zEuGXmDIqfj9W9vM4NPuzLBeDLCgrPkkpwJmtVxxs7tlRSkEEtMZHhbgGe8ZD5TaEkD7quGKo4rMVBzNLxYOD7bD29TQ5saP7yET0+9j0bXBJoLSAqVXOhzGebvih8f2/lXm8S9W1nejsvstuCwDPxpEjQoaX2B9t0ShZCid+s8UYo7vv6Fcgd59Zinu/8fl3Muc3SuADY6LUYmZsYagJo1wS2UvFa5AMKaz17T2wYeQoKLgtBND+oOB/D8az0/ykudbh4YJrjkRfevP982iiiWTF5TzpsZ1S+BuQ35Jv2f66M8fGCbtRiAHryUAAdE/ezL0XoW+pwYMSNby8jb1w12oyzS3fmJnmkVPnuoF3N7BCQ47lEWSC5ybTmb6R8l3KHrdJcuB/GgUpkUsM1kfSLeVvtrF6CaYcw== stafford.williams@gmail.com",
        "metadata": {
          "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
        }
      },
      "dnsLabelPrefix": {
        "type": "string",
        "defaultValue": "digital-icebreakers",
        "metadata": {
          "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
        }
      },
      "ubuntuOSVersion": {
        "type": "string",
        "defaultValue": "16.04.0-LTS",
        "allowedValues": [
          "12.04.5-LTS",
          "14.04.5-LTS",
          "16.04.0-LTS",
          "18.04-LTS"
        ],
        "metadata": {
          "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      }
    },
    "variables": {
      "storageAccountName": "digitalicebreakers",
      "imagePublisher": "Canonical",
      "imageOffer": "UbuntuServer",
      "nicName": "digital-icebreakers-nic",
      "addressPrefix": "10.0.0.0/16",
      "subnetName": "Subnet",
      "subnetPrefix": "10.0.0.0/24",
      "storageAccountType": "Standard_LRS",
      "userAssignedIdentityResourceGroup": "container-registry",
      "userAssignedIdentityName": "container-registry-identity",
      "publicIPAddressName": "digital-icebreakers-ip",
      "publicIPAddressType": "Dynamic",
      "vmName": "digital-icebreakers-vm",
      "vmSize": "Standard_B1s",
      "virtualNetworkName": "digital-icebreakers-vnet",
      "linuxConfiguration": {
        "disablePasswordAuthentication": true,
        "ssh": {
          "publicKeys": [
            {
              "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
              "keyData": "[parameters('adminPasswordOrKey')]"
            }
          ]
        }
      },
      "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
    },
    "resources": [
      {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2018-11-01",
        "name": "[variables('storageAccountName')]",
        "location": "[parameters('location')]",
        "sku": {
          "name": "[variables('storageAccountType')]"
        },
        "kind": "Storage",
        "properties": {}
      },
      {
        "type": "Microsoft.Network/publicIPAddresses",
        "apiVersion": "2018-11-01",
        "name": "[variables('publicIPAddressName')]",
        "location": "[parameters('location')]",
        "properties": {
          "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
          "dnsSettings": {
            "domainNameLabel": "[parameters('dnsLabelPrefix')]"
          }
        }
      },
      {
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2018-11-01",
        "name": "[variables('virtualNetworkName')]",
        "location": "[parameters('location')]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('addressPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnetName')]",
              "properties": {
                "addressPrefix": "[variables('subnetPrefix')]"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2018-11-01",
        "name": "[variables('nicName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
          "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                },
                "subnet": {
                  "id": "[variables('subnetRef')]"
                }
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2018-10-01",
        "name": "[variables('vmName')]",
        "location": "[parameters('location')]",
        "identity": {
          "type": "userAssigned",
          "userAssignedIdentities": {
              "[resourceID(variables('userAssignedIdentityResourceGroup'),'Microsoft.ManagedIdentity/userAssignedIdentities/',variables('userAssignedIdentityName'))]": {}
          }
        },
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
          "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "[variables('vmSize')]"
          },
          "osProfile": {
            "computerName": "[variables('vmName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPasswordOrKey')]",
            "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[variables('imagePublisher')]",
              "offer": "[variables('imageOffer')]",
              "sku": "[parameters('ubuntuOSVersion')]",
              "version": "latest"
            },
            "osDisk": {
              "name": "digital-icebreakers-vm-disk",
              "createOption": "FromImage",
              "diskSizeGB": 10,
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
              }
            ]
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true,
              "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2016-01-01').primaryEndpoints.blob)]"
            }
          }
        },
        "resources":[
            {
                "name": "install-docker",
                "type": "extensions",
                "location": "[resourceGroup().location]",
                "apiVersion": "2018-10-01",
                "dependsOn": [
                    "[variables('vmName')]"
                ],
                "tags": {
                  "displayName": "install-docker"
                },
                "properties": {
                  "publisher": "Microsoft.Azure.Extensions",
                  "type": "CustomScript",
                  "typeHandlerVersion": "2.0",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    },
                  "protectedSettings": {
                    "commandToExecute": "[concat('curl -o ./custom-script.sh --header ''Authorization: token ', parameters('githubPat'), ''' --header ''Accept: application/vnd.github.v3.raw'' --remote-name --location ', parameters('vmScriptPath'), ' && chmod +x ./custom-script.sh && ./custom-script.sh')]"
                  }
                }
              }
        ]
      }, {
        "name": "digital-icebreakers-application-insights",
        "type": "microsoft.insights/components",
        "location": "[resourceGroup().location]",
        "apiVersion": "2014-08-01",
        "properties": {
            "ApplicationId": "digital-icebreakers-application-insights",
            "Application_Type": "web",
            "Flow_Type": "Redfield",
            "Request_Source": "IbizaAIExtension"
        }
    }
    ],
    "outputs": {
      "hostname": {
        "type": "string",
        "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
      },
      "sshCommand": {
        "type": "string",
        "value": "[concat('ssh ', parameters('adminUsername'), '@', reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
      },
      "instrumentation-key": {
        "type": "string",
        "value": "[reference('digital-icebreakers-application-insights').InstrumentationKey]"
      }
    }
  }
